<?xml version="1.0"?>

<robot name="cam_bot" xmlns:xacro="http://ros.org/wiki/xacro">



<!-- <link name="world">

<joint name="world_joint" type="fixed">
      <parent link="world" />
      <child link = "base_link" />
      <origin xyz="0 0 0" rpy="0.0 0.0 0.0" />    
      <axis xyz="0 0 1" />
</joint> -->



<link name="base_link">
      <inertial>
        <mass value="1.584994"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
      <visual>
        <geometry>
          <mesh filename="package://camera_sim/mesh/BASE.stl" scale="3 3 3"/>
        </geometry>
        <material name="RED">
          <color rgba="1.0 0.0 0.0 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://camera_sim/mesh/BASE.stl" scale="3 3 3" />
        </geometry>
      </collision>
</link>



<joint name="camera_joint" type="fixed">
      <parent link="base_link" />
      <child link = "camera_link" />
      <origin xyz="0.08 0 0.7" rpy="0.0 0.0 0.0" />
      <!-- <origin xyz="0 0.505 0.242" rpy="0.0 1.57 0.0" /> -->
      <!-- use this when image is to much blocked -->
      <axis xyz="0 0 1" />
</joint>




<link name="camera_link">
      <inertial>
        <mass value="0.2"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia
          ixx="0.01" ixy="0.001" ixz="0"
          iyy="0.01" iyz="0.0"
          izz="0.01"/>
      </inertial>
      <visual>
        <geometry>
        <cylinder length="0.01" radius="0.01"/>
        </geometry>
        <material name="Blue">
          <color rgba="0 0 1.0 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
        <cylinder length="0.01" radius="0.01"/>
        </geometry>
      </collision>
</link>




<joint name="camera_depth_joint" type="fixed">
  <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
  <parent link="camera_link"/>
  <child link="camera_depth_frame"/>
</joint>

  <link name="camera_depth_frame">
</link>



<gazebo reference="camera_link">
    <sensor type="depth" name="intelrealsense2">
    <update_rate>1</update_rate>
      <always_on>1</always_on>
      <visualize>true</visualize>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <depth_camera>

        </depth_camera>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin name="intelrealsense" filename="libgazebo_ros_openni_kinect.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>1</updateRate>
        <cameraName>camera_intelrealsense</cameraName>
        <frameName>camera_depth_frame</frameName>
        <imageTopicName>/camera/color/image_raw</imageTopicName>
        <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/point_cloud</pointCloudTopicName>
        <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
         <pointCloudCutoff>0.2</pointCloudCutoff>
         <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>

</robot>